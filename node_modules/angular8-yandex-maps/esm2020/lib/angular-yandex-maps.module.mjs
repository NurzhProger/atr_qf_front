import { NgModule } from '@angular/core';
import { YaClustererComponent } from './components/ya-clusterer/ya-clusterer.component';
import { YaControlDirective } from './components/ya-control/ya-control.directive';
import { YaGeoObjectDirective } from './components/ya-geoobject/ya-geoobject.directive';
import { YaMapComponent } from './components/ya-map/ya-map.component';
import { YaMultirouteDirective } from './components/ya-multiroute/ya-multiroute.directive';
import { YaObjectManagerDirective } from './components/ya-object-manager/ya-object-manager.directive';
import { YaPanoramaDirective } from './components/ya-panorama/ya-panorama.directive';
import { YaPlacemarkDirective } from './components/ya-placemark/ya-placemark.directive';
import { YA_CONFIG } from './tokens/ya-config';
import * as i0 from "@angular/core";
export class AngularYandexMapsModule {
    /**
     * Please use this method when you register the module at the root level
     * @param config
     */
    static forRoot(config) {
        return {
            ngModule: AngularYandexMapsModule,
            providers: [{ provide: YA_CONFIG, useValue: config }],
        };
    }
}
AngularYandexMapsModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: AngularYandexMapsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });
AngularYandexMapsModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "14.2.5", ngImport: i0, type: AngularYandexMapsModule, declarations: [YaClustererComponent,
        YaControlDirective,
        YaGeoObjectDirective,
        YaMapComponent,
        YaMultirouteDirective,
        YaObjectManagerDirective,
        YaPanoramaDirective,
        YaPlacemarkDirective], exports: [YaClustererComponent,
        YaControlDirective,
        YaGeoObjectDirective,
        YaMapComponent,
        YaMultirouteDirective,
        YaObjectManagerDirective,
        YaPanoramaDirective,
        YaPlacemarkDirective] });
AngularYandexMapsModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: AngularYandexMapsModule });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "14.2.5", ngImport: i0, type: AngularYandexMapsModule, decorators: [{
            type: NgModule,
            args: [{
                    declarations: [
                        YaClustererComponent,
                        YaControlDirective,
                        YaGeoObjectDirective,
                        YaMapComponent,
                        YaMultirouteDirective,
                        YaObjectManagerDirective,
                        YaPanoramaDirective,
                        YaPlacemarkDirective,
                    ],
                    exports: [
                        YaClustererComponent,
                        YaControlDirective,
                        YaGeoObjectDirective,
                        YaMapComponent,
                        YaMultirouteDirective,
                        YaObjectManagerDirective,
                        YaPanoramaDirective,
                        YaPlacemarkDirective,
                    ],
                }]
        }] });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYW5ndWxhci15YW5kZXgtbWFwcy5tb2R1bGUuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9hbmd1bGFyOC15YW5kZXgtbWFwcy9zcmMvbGliL2FuZ3VsYXIteWFuZGV4LW1hcHMubW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBdUIsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBRTlELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLDhDQUE4QyxDQUFDO0FBQ2xGLE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLGtEQUFrRCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQUN0RSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSxvREFBb0QsQ0FBQztBQUMzRixPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSw0REFBNEQsQ0FBQztBQUN0RyxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSxnREFBZ0QsQ0FBQztBQUNyRixPQUFPLEVBQUUsb0JBQW9CLEVBQUUsTUFBTSxrREFBa0QsQ0FBQztBQUV4RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sb0JBQW9CLENBQUM7O0FBd0IvQyxNQUFNLE9BQU8sdUJBQXVCO0lBQ2xDOzs7T0FHRztJQUNILE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBZ0I7UUFDN0IsT0FBTztZQUNMLFFBQVEsRUFBRSx1QkFBdUI7WUFDakMsU0FBUyxFQUFFLENBQUMsRUFBRSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUUsQ0FBQztTQUN0RCxDQUFDO0lBQ0osQ0FBQzs7b0hBVlUsdUJBQXVCO3FIQUF2Qix1QkFBdUIsaUJBcEJoQyxvQkFBb0I7UUFDcEIsa0JBQWtCO1FBQ2xCLG9CQUFvQjtRQUNwQixjQUFjO1FBQ2QscUJBQXFCO1FBQ3JCLHdCQUF3QjtRQUN4QixtQkFBbUI7UUFDbkIsb0JBQW9CLGFBR3BCLG9CQUFvQjtRQUNwQixrQkFBa0I7UUFDbEIsb0JBQW9CO1FBQ3BCLGNBQWM7UUFDZCxxQkFBcUI7UUFDckIsd0JBQXdCO1FBQ3hCLG1CQUFtQjtRQUNuQixvQkFBb0I7cUhBR1gsdUJBQXVCOzJGQUF2Qix1QkFBdUI7a0JBdEJuQyxRQUFRO21CQUFDO29CQUNSLFlBQVksRUFBRTt3QkFDWixvQkFBb0I7d0JBQ3BCLGtCQUFrQjt3QkFDbEIsb0JBQW9CO3dCQUNwQixjQUFjO3dCQUNkLHFCQUFxQjt3QkFDckIsd0JBQXdCO3dCQUN4QixtQkFBbUI7d0JBQ25CLG9CQUFvQjtxQkFDckI7b0JBQ0QsT0FBTyxFQUFFO3dCQUNQLG9CQUFvQjt3QkFDcEIsa0JBQWtCO3dCQUNsQixvQkFBb0I7d0JBQ3BCLGNBQWM7d0JBQ2QscUJBQXFCO3dCQUNyQix3QkFBd0I7d0JBQ3hCLG1CQUFtQjt3QkFDbkIsb0JBQW9CO3FCQUNyQjtpQkFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBZYUNsdXN0ZXJlckNvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy95YS1jbHVzdGVyZXIveWEtY2x1c3RlcmVyLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFlhQ29udHJvbERpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy95YS1jb250cm9sL3lhLWNvbnRyb2wuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgWWFHZW9PYmplY3REaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtZ2Vvb2JqZWN0L3lhLWdlb29iamVjdC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBZYU1hcENvbXBvbmVudCB9IGZyb20gJy4vY29tcG9uZW50cy95YS1tYXAveWEtbWFwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFlhTXVsdGlyb3V0ZURpcmVjdGl2ZSB9IGZyb20gJy4vY29tcG9uZW50cy95YS1tdWx0aXJvdXRlL3lhLW11bHRpcm91dGUuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgWWFPYmplY3RNYW5hZ2VyRGlyZWN0aXZlIH0gZnJvbSAnLi9jb21wb25lbnRzL3lhLW9iamVjdC1tYW5hZ2VyL3lhLW9iamVjdC1tYW5hZ2VyLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IFlhUGFub3JhbWFEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtcGFub3JhbWEveWEtcGFub3JhbWEuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgWWFQbGFjZW1hcmtEaXJlY3RpdmUgfSBmcm9tICcuL2NvbXBvbmVudHMveWEtcGxhY2VtYXJrL3lhLXBsYWNlbWFyay5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBZYUNvbmZpZyB9IGZyb20gJy4vbW9kZWxzL3lhLWNvbmZpZyc7XHJcbmltcG9ydCB7IFlBX0NPTkZJRyB9IGZyb20gJy4vdG9rZW5zL3lhLWNvbmZpZyc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGRlY2xhcmF0aW9uczogW1xyXG4gICAgWWFDbHVzdGVyZXJDb21wb25lbnQsXHJcbiAgICBZYUNvbnRyb2xEaXJlY3RpdmUsXHJcbiAgICBZYUdlb09iamVjdERpcmVjdGl2ZSxcclxuICAgIFlhTWFwQ29tcG9uZW50LFxyXG4gICAgWWFNdWx0aXJvdXRlRGlyZWN0aXZlLFxyXG4gICAgWWFPYmplY3RNYW5hZ2VyRGlyZWN0aXZlLFxyXG4gICAgWWFQYW5vcmFtYURpcmVjdGl2ZSxcclxuICAgIFlhUGxhY2VtYXJrRGlyZWN0aXZlLFxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgWWFDbHVzdGVyZXJDb21wb25lbnQsXHJcbiAgICBZYUNvbnRyb2xEaXJlY3RpdmUsXHJcbiAgICBZYUdlb09iamVjdERpcmVjdGl2ZSxcclxuICAgIFlhTWFwQ29tcG9uZW50LFxyXG4gICAgWWFNdWx0aXJvdXRlRGlyZWN0aXZlLFxyXG4gICAgWWFPYmplY3RNYW5hZ2VyRGlyZWN0aXZlLFxyXG4gICAgWWFQYW5vcmFtYURpcmVjdGl2ZSxcclxuICAgIFlhUGxhY2VtYXJrRGlyZWN0aXZlLFxyXG4gIF0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBBbmd1bGFyWWFuZGV4TWFwc01vZHVsZSB7XHJcbiAgLyoqXHJcbiAgICogUGxlYXNlIHVzZSB0aGlzIG1ldGhvZCB3aGVuIHlvdSByZWdpc3RlciB0aGUgbW9kdWxlIGF0IHRoZSByb290IGxldmVsXHJcbiAgICogQHBhcmFtIGNvbmZpZ1xyXG4gICAqL1xyXG4gIHN0YXRpYyBmb3JSb290KGNvbmZpZzogWWFDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPEFuZ3VsYXJZYW5kZXhNYXBzTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogQW5ndWxhcllhbmRleE1hcHNNb2R1bGUsXHJcbiAgICAgIHByb3ZpZGVyczogW3sgcHJvdmlkZTogWUFfQ09ORklHLCB1c2VWYWx1ZTogY29uZmlnIH1dLFxyXG4gICAgfTtcclxuICB9XHJcbn1cclxuIl19